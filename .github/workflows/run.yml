name: Run Ero

on:
  repository_dispatch:
    types: [ start ]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Decompiler
      uses: actions/checkout@v3
      with:
        repository: 'jaacksondev/ero-decompiler'
        token: ${{ secrets.API_TOKEN_GITHUB }}
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Setup JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ github.event.client_payload.java }}
    - name: Make Gradle Wrapper Executable
      run: chmod +x ./gradlew
    - name: Download Binaries
      env:
        CLIENT: ${{ github.event.client_payload.downloads.client.url }}
        CLIENT_MAPPINGS: ${{ github.event.client_payload.downloads.client_mappings.url }}
        SERVER: ${{ github.event.client_payload.downloads.server.url }}
        SERVER_MAPPINGS: ${{ github.event.client_payload.downloads.server_mappings.url }}
      run: wget -P run/ $CLIENT $CLIENT_MAPPINGS $SERVER $SERVER_MAPPINGS
    - name: Download Libraries
      env:
        LIBRARY_URLS: ${{ github.event.client_payload.libraries.urls }}
      run: wget -P run/libraries/ $LIBRARY_URLS
    - name: Cache Gradle
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Decompile Minecraft
      run: ./gradlew run
    - name: Checkout Actions
      uses: actions/checkout@v3
      with:
        path: action
    - name: Commit Changes
      id: commit
      uses: ./action
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source_file: 'run/output/.'
        destination_repo: 'jaacksondev/ero-minecraft-source'
        user_email: 'jackson@moonflower.gg'
        user_name: 'jaacksondev'
        commit_message: ${{ github.event.client_payload.version }}
    - name: Update Worker State
      if: ${{ success() }}
      env:
        WORKER: ${{ secrets.WORKER_URL }}
      run: curl $WORKER/finish?commit=${{ steps.commit.outputs.commit_hash }}
    - name: Update Worker Fail State
      if: ${{ failure() }}
      env:
        WORKER: ${{ secrets.WORKER_URL }}
      run: curl $WORKER/fail
